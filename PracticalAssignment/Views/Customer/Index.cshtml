@model IEnumerable<PracticalAssignment.Models.BusinessEntity.ProductVM>
@{
    ViewData["Title"] = "Products";
}

<style>
    .card:hover {
        -webkit-box-shadow: -1px 9px 40px -12px rgba(0,0,0,0.75);
        -moz-box-shadow: -1px 9px 40px -12px rgba(0,0,0,0.75);
        box-shadow: -1px 9px 40px -12px rgba(0,0,0,0.75);
    }
</style>
<h2 class="text-center alert alert-light">All Products</h2>
<hr />
<div class="row">
    @foreach (var item in Model)
    {
        @using (Html.BeginForm("AddOrder", "Customer", FormMethod.Post))
        {

            @Html.HiddenFor(model => item.ProductId)

            <div class="col-md-3 mt-3">
                <div class="card alert alert-dark" style="width: 18rem;">
                    <img class="card-img-top c-image" src="@("~/image/"+item.Photo)" asp-append-version="true" alt="Card image cap" height="180" width="268">
                    <div class="card-body">
                        <div>
                            <h4 class="card-title text-center">@item.ProductName</h4>
                        </div>
                        <hr />
                        <div>
                            <div class="">
                                <span><strong>Price: </strong>@item.UnitPrice <span>&#8377;</span></span>
                            </div>
                            <div class="">
                                <strong>Category: </strong> @item.Category
                            </div>
                            <div class="">
                                <strong>Units: </strong> @item.Unit
                            </div>
                            <strong>Quantity: </strong>
                            <div class="btn-group mt-2">
                                <button href="#" class="btn btn-secondary sub"><i class="fa fa-minus" ></i></button>
                                <input id="InputQuantity" type="text" name="Quantity" value="1" class="form-control btn quantity" />
                                <button href="#" class="btn btn-secondary add" ><i class="fa fa-plus"></i></button>

                            </div>
                        </div>
                        <div class="row d-flex justify-content-between">
                            <button type="submit" id="@item.ProductId" class="btn btn-success mt-4 col-5 " asp-action="BuySingleProduct" asp-route-id="@item.ProductId"> Buy</button>
                            <button type="submit" id="@item.ProductId+@item.ProductId" class="btn btn-primary mt-4 col-5 " asp-action="AddToCart" asp-route-id="@item.ProductId">
                            <i class="fa fa-cart-plus mr-2" style="font-size:23px;"></i>Cart</button>

                        </div>
                        <div class="row">
                            @{
                                if (@item.Status == "Out of Stock")
                                {
                                    <div class="text-danger border border-danger col-md-12 mt-2" style="background-color:lightcoral;">Out of Stock</div>
                                    <script>
                                            document.getElementById("@item.ProductId").disabled = true;
                                            document.getElementById("@item.ProductId+@item.ProductId").disabled = true;
                                    </script>
                                }
                            }
                        </div>
                    </div>
                </div>

            </div>

        }
    }


</div>
@section scripts{ 
<script type="text/javascript">
    $('.add').click(function () {
        var target = $('.quantity', this.parentNode)[0];
        target.value = +target.value + 1;
        return false;
    });
    $('.sub').click(function () {
        var target = $('.quantity', this.parentNode)[0];
        if (target.value > 1) {
            target.value = +target.value - 1;
        }
        return false;
    });

</script>


}
@{
    if (TempData["PlaceOrder"] != null)
    {
        <script>
            Swal.fire({
                position: 'top-end',
                icon: 'success',
                title: 'Order Placed!',
                showConfirmButton: false,
                timer: 1500
            })
        </script>
    }

    if (TempData["AlreadyExists"] != null)
    {
        <script>
            Swal.fire({
                position: 'top-end',
                icon: 'error',
                title: 'Item Already Exists!',
                showConfirmButton: false,
                timer: 1500
            })
        </script>
    }
    if (TempData["LoginSuccess"] != null)
    {
        <script>
            Swal.fire({
                position: 'top-end',
                icon: 'success',
                title: 'Login Successful!',
                showConfirmButton: false,
                timer: 1500
            })
        </script>
    }
    if (TempData["AddToCart"] != null)
    {
        <script>
            Swal.fire({
                position: 'top-end',
                icon: 'success',
                title: 'Added To Cart!',
                showConfirmButton: false,
                timer: 1500
            })
        </script>
    }

}
